<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ddit.board.mapper.CustBoardMapper">

	<sql id="boardSearch">
		<if test="searchType != null and searchType =='title'">
			and (b.CUST_BRD_TTL like '%' || #{searchWord} ||'%')
		</if>
		<if test="searchType != null and searchType =='writer'">
			and (e.CUST_BRD_NM like '%' || #{searchWord} ||'%')
		</if>
	</sql>


	<sql id="where">
		<if test="gubun != null and gubun != ''">
			<choose>
				<when test="gubun == 'all'">
					AND NTC_BRD_TTL LIKE '%' || #{keyword} || '%'
					OR
					NTC_BRD_CN LIKE '%' || #{keyword} || '%'
					OR EMP_NM LIKE '%' ||
					#{keyword} || '%'
				</when>
				<when test="gubun == 'title'">
					AND NTC_BRD_TTL LIKE '%' || #{keyword} || '%'
				</when>
				<when test="gubun == 'content'">
					AND NTC_BRD_CN LIKE '%' || #{keyword} || '%'
				</when>
				<when test="gubun == 'author'">
					AND EMP_NM LIKE '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
	</sql>


	<!-- 자유게시판 목록 조회(페이징) -->
	<!-- <select id="selectBoardlist" parameterType="pagingVO" resultType="custBoardVO"> -->
	<!-- select b.* -->
	<!-- from (select a * -->
	<!-- , row_number() over(order by a.CUST_BRD_NO desc) rnum -->
	<!-- from (select b.CUST_BRD_NO -->
	<!-- , b.CUST_BRD_TTL -->
	<!-- , b.CUST_BRD_NM as "boWriter" -->
	<!-- , b.CUST_BRD_REG_YMD -->

	<!-- from board b, employee e -->
	<!-- where b.MEM_ID = e.MEM_ID -->
	<!-- and b.bo_delyn = 'N' -->
	<!-- and 1=1 -->
	<!-- <include refid="boardSearch"/> -->
	<!-- order by b.CUST_BRD_REG_YMD desc) a -->
	<!-- )b -->
	<!-- <![CDATA[ -->
	<!-- where b.rnum >= #{startRow} and b.rnum <= #{endRow} -->
	<!-- ]]> -->
	<!-- </select> -->

	<!-- 페이징 처리를 위한 게시글 갯수 -->
	<!-- <select id="selectBoardCount" parameterType="pagingVO" resultType="int"> -->
	<!-- select count(b.CUST_BRD_NO) -->
	<!-- from board b, employee e -->
	<!-- where b.bo_delyn = 'N' -->
	<!-- and b.MEM_ID = e.MEM_ID -->
	<!-- and 1=1 -->
	<!-- <include refid="boardSearch"/> -->
	<!-- </select> -->

	<!-- 주인공 custBoardVO 1 -->
	<resultMap type="custBoardVO" id="boardMap">
		<result property="custBrdNo" column="CUST_BRD_NO" />
		<result property="custBrdTtl" column="CUST_BRD_TTL" />
		<result property="custBrdCn" column="CUST_BRD_CN" />
		<result property="custBrdPswd" column="CUST_BRD_PSWD" />
		<result property="custBrdNm" column="CUST_BRD_NM" />
		<result property="custBrdAnsYn" column="CUST_BRD_ANS_YN" />
		<result property="custBrdRegYmd" column="CUST_BRD_REG_YMD" />
		<result property="fileGroupNo" column="FILE_GROUP_NO" />
		<result property="fileSn" column="FILE_SN" />
		<!-- 참조테이블 -->
		<association property="boFile" resultMap="filesMap"></association>
	</resultMap>

	<!-- 1) BOARD : FILES = 1 : 1 -->
	<resultMap type="fileDetailVO" id="filesMap">
		<result property="fileSn" column="FILE_SN" />
		<result property="fileGroupNo" column="FILE_GROUP_NO" />
		<result property="fileOrgnlFileNm" column="FILE_ORGNL_FILE_NM" />
		<result property="fileStrgFileNm" column="FILE_STRG_FILE_NM" />
		<result property="fileFilePathNm" column="FILE_FILE_PATH_NM" />
		<result property="fileSz" column="FILE_SZ" />
		<result property="fileFileExtnNm" column="FILE_FILE_EXTN_NM" />
		<result property="fileMime" column="FILE_MIME" />
		<result property="fileFancysize" column="FILE_FANCYSIZE" />
		<result property="fileFileStrgYmd" column="FILE_FILE_STRG_YMD" />
		<result property="fileDwnldCnt" column="FILE_DWNLD_CNT" />
	</resultMap>

	<!-- 2) FILES : FILE_DETAIL = 1 : N -->


	<!-- 게시글 상세 -->
	<select id="boardDetail" parameterType="int"
		resultMap="boardMap">
		SELECT
		E.EMP_NM,
		B.NTC_BRD_NO, B.MEM_ID, B.NTC_BRD_TYPE,
		B.NTC_BRD_TTL,
		SUBSTR(B.NTC_BRD_REG_YMD,1,4)||'-'||SUBSTR(B.NTC_BRD_REG_YMD,5,2)||'-'||SUBSTR(B.NTC_BRD_REG_YMD,7,2)
		AS NTC_BRD_REG_YMD,
		B.NTC_BRD_CN,
		B.NTC_BRD_INQ_CNT, FILE_GROUP_NO
		FROM
		NOTICE_BOARD B
		JOIN EMPLOYEE E ON (B.MEM_ID = E.MEM_ID)
		WHERE
		B.NTC_BRD_NO = #{ntcBrdNo}
	</select>


	<!-- 조회 수 증가 -->
	<!-- <update id="incrementHit" parameterType="int"> -->
	<!-- update CUST_BOARD -->
	<!-- set bo_hit = bo_hit + 1 -->
	<!-- where CUST_BRD_NO = #{boNo} -->
	<!-- </update> -->


	<!-- 자유게시판 등록 및 파일 처리 시작 -->
	<!-- 자유게시판 데이터 등록 -->
	<insert id="insertBoard" parameterType="custBoardVO"
		useGeneratedKeys="true">
		<selectKey keyProperty="boNo" resultType="int"
			order="BEFORE">
			select seq_board.nextval from dual
		</selectKey>
		insert into board
		(
		CUST_BRD_NO, MEM_ID, CUST_BRD_TTL, CUST_BRD_CN,
		CUST_BRD_PSWD,
		CUST_BRD_NM,
		CUST_BRD_ANS_YN,
		CUST_BRD_REG_YMD

		)
		values
		(
		#{boNo}, #{empNo}, #{boTitle}, #{boContent}, sysdate
		)
	</insert>



	<insert id="registPost" parameterType="boardVO">
		<selectKey resultType="String" order="BEFORE"
			keyProperty="ntcBrdNo">
			SELECT 'NTCBRD-' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '-'
			||
			LPAD(NVL(MAX(SUBSTR(NTC_BRD_NO, -3)) + 1, 1), 3, '0') AS NTC_BRD_NO
			FROM NOTICE_BOARD
			WHERE SUBSTR(NTC_BRD_NO, 8, 8) = TO_CHAR(SYSDATE,
			'YYYYMMDD')
		</selectKey>
		INSERT INTO NOTICE_BOARD(NTC_BRD_NO, MEM_ID, NTC_BRD_TYPE,
		NTC_BRD_TTL, NTC_BRD_REG_YMD, NTC_BRD_CN, NTC_BRD_INQ_CNT,
		FILE_GROUP_NO)
		VALUES(#{ntcBrdNo}
		, #{memId}
		, #{ntcBrdType}
		,
		#{ntcBrdTtl}
		, TO_CHAR(SYSDATE, 'YYYYMMDD')
		, #{ntcBrdCn}
		,
		#{ntcBrdInqCnt}
		, #{fileGroupNo})
	</insert>


	<!-- 파일 테이블 등록(파일 상세를 담을 부모 테이블) -->
	<insert id="insertFiles" parameterType="fileDetailVO"
		useGeneratedKeys="true">
		<selectKey keyProperty="fileNo" resultType="int"
			order="BEFORE">
			select seq_file.nextval from dual
		</selectKey>
		insert into files
		(
		file_no, file_regdate, file_where_no, file_where_pk
		)
		values
		(
		#{fileNo}, sysdate, #{fileWhereNo}, #{fileWherePk}
		)
	</insert>

	<!-- 파일 상세 테이블 등록 -->
	<insert id="insertFileDetail" parameterType="fileDetailVO">
		insert into
		file_detail
		(
		file_detail_no, file_no, file_save_name, file_origin_name,
		file_size,
		file_url, file_mime, file_fancysize
		)
		values
		(
		seq_file_detail.nextval, #{fileNo}, #{fileSaveName},
		#{fileOriginName}, #{fileSize},
		#{fileUrl}, #{fileMime},
		#{fileFancysize}
		)
	</insert>
	<!-- 자유게시판 등록 및 파일 처리 끝 -->

	<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="custBoardVO">
		update CUST_BOARD
		set CUST_BRD_TTL = #{boTitle}
		, CUST_BRD_CN =
		#{boContent}
		<!-- , bo_moddate = sysdate -->
		where CUST_BRD_NO = #{boNo}
	</update>

	<!-- 게시글 파일 가져오기 -->
	<select id="selectBoardFile" parameterType="int"
		resultType="fileDetailVO">
		select file_url
		from file_detail
		where file_detail_no =
		#{fileDetailNo}
	</select>

	<select id="fileList" parameterType="long"
		resultType="FileDetailVO">
		SELECT FILE_SN,
		FILE_GROUP_NO, FILE_ORGNL_FILE_NM,
		FILE_STRG_FILE_NM,
		FILE_FILE_PATH_NM, FILE_SZ, FILE_FILE_EXTN_NM,
		FILE_MIME,
		FILE_FANCYSIZE, FILE_FILE_STRG_YMD, FILE_DWNLD_CNT
		FROM
		FILE_DETAIL
		WHERE FILE_GROUP_NO
		= #{fileGroupNo}
	</select>




	<!-- 사원 이름 가져오기 -->
	<select id="selectEmpList" parameterType="int"
		resultType="employeeVO">
		select *
		from employee
	</select>

	<!-- 게시글 내 댓글/답글 조회 -->
	<select id="selectComment" parameterType="int"
		resultType="custReplyVO">
		select CUST_REPLY_NO
		, CUST_BRD_NO
		, MEM_ID
		, CUST_REPLY_CN

		,
		CUST_BRD_NO
		from CUST_REPLY
		where CUST_BRD_NO = #{boNo}
		order by
		CUST_REPLY_NO
	</select>

	<!-- 게시글 내 댓글/답글 등록 -->
	<!-- insert/update/delete는 resultType을 생략(당연히 int이므로) BoardCommentVO(boCoNo=0, 
		boNo=26, empNo=1, boCoContent=asdf , boCoDate=null, boCoModdate=null, boCoDelyn=null, 
		boCoParentNo=0) null인 프로퍼티는 사용불가->오류발생! -->
	<insert id="addComment" parameterType="custReplyVO">
		<selectKey resultType="int" order="BEFORE"
			keyProperty="boCoNo">
			select nvl(max(CUST_REPLY_NO),0)+1 from CUST_REPLY
		</selectKey>

		insert into CUST_REPLY
		(
		CUST_REPLY_NO,CUST_REPLY_CN, CUST_BRD_NO,
		MEM_ID
		<if test="boCoParentNo != 0">
			, CUST_BRD_NO
		</if>
		)
		values
		(
		#{boCoNo}, #{boNo}, #{empNo}, #{boCoContent}, SYSDATE, 'N'
		<if test="boCoParentNo != 0">
			, #{boCoParentNo}
		</if>
		)
	</insert>

	<!-- 게시글 내 댓글/답글 수정 -->
	<update id="modifyComment" parameterType="custReplyVO">
		update CUST_REPLY
		set
		CUST_REPLY_CN = #{boCoContent}
		where CUST_REPLY_NO = #{boCoNo}
	</update>

	<!-- 게시글 내 댓글/답글 삭제 -->
	<update id="deleteComment">
		update CUST_REPLY
		set CUST_REPLY_CN = 'Deleted
		comments'
		where CUST_REPLY_NO = #{boCoNo}
	</update>



</mapper>




















