<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.human.mapper.EmployeeMapper">
	
	<sql id="where">
		<if test="getDepts!=null and getDepts!=''"><!-- /list?getDepts=C3 -->
			AND   A.DEPT_NM = (SELECT DEPT_NM FROM DEPARTMENT WHERE  DEPT_CD = #{getDepts})
		</if>
	    <if test="getJobGrades!=null and getJobGrades!=''"><!-- /list?getJobGrades=C3 -->
         AND   C.JBGD_NM = (SELECT JBGD_NM FROM JOB_GRADE WHERE JBGD_CD = #{getJobGrades})
      </if>
 	<if test="getEmpStats!=null and getEmpStats!=''"><!-- /list?getEmpStats=C3 -->
        AND   D.COM_DET_CD_CN = (SELECT COM_DET_CD_CN FROM COMMON_CODE_DETAIL WHERE COM_DET_CD = #{getEmpStats})
      </if>

		<if test="gubun != null and gubun != ''">
			<choose>
				<when test="gubun == 'all'">
					AND  (B.EMP_NM LIKE '%' || #{keyword} || '%' <!-- 사원명 -->
					OR   B.EMP_EML LIKE '%' || #{keyword} || '%' <!-- 이메일 -->
					OR   B.EMP_MOBLPHON LIKE '%' || #{keyword} || '%' <!-- 휴대전화 -->
					OR   A.DEPT_NM LIKE '%' || #{keyword} || '%' <!-- 부서명 -->
					OR   C.JBGD_NM LIKE '%' || #{keyword} || '%' <!-- 직급명 -->
					OR   B.EMP_HDOF_STAT LIKE '%' || #{keyword} || '%' <!-- 재직상태 -->
					OR   B.EMP_JNCMP_YMD LIKE '%' || #{keyword} || '%') <!--  입사일자 -->
				</when>
				<when test="gubun == 'empNm'">
					AND B.EMP_NM LIKE '%' || #{keyword} || '%'
				</when>
				<when test="gubun == 'email'">
					AND B.EMP_EML LIKE '%' || #{keyword} || '%'
				</when>
				<when test="gubun == 'phone'">
					AND B.EMP_MOBLPHON LIKE '%' || #{keyword} || '%'
				</when>
				<when test="gubun == 'deptNm'"><!-- 부서명-->
					AND A.DEPT_NM LIKE '%' || #{keyword} || '%'
				</when>
				<when test="gubun == 'jbgdNm'"><!-- 직급명 -->
					AND C.JBGD_NM LIKE '%' || #{keyword} || '%'
				</when>
				<when test="gubun == 'empHdofStat'"> <!-- 재직상태 -->
					AND B.EMP_HDOF_STAT LIKE '%' || #{keyword} || '%'
				</when>
				<when test="gubun == 'empJncmpYmd'"><!-- 입사일자-->
					AND B.EMP_JNCMP_YMD LIKE '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
	</sql>
	
	<!-- 24.09.18 임세희 사원목록 -->
	<select id="list" parameterType="hashMap" resultMap="empMap">
		WITH T AS
		(
		SELECT 
				 ROW_NUMBER() OVER (
			        ORDER BY B.DEPT_CD ASC  <!--  DEPT_CD를 기준으로 오름차순 정렬 -->
			    ) AS RNUM,
				B.MEM_ID, <!-- 사원아이디 -->
		   		E.ENABLED, <!-- 탈퇴여부 1이면 근무 0이면 퇴사 -->
		   		
			    SUBSTR(B.EMP_RRNO, 1, 4) || '-' || 
			    SUBSTR(B.EMP_RRNO, 5, 2) || '-' || 
			    SUBSTR(B.EMP_RRNO, 7, 2) AS EMP_RRNO,<!-- 생년월일 -->
		        B.EMP_EML, <!--이메일  -->
		        SUBSTR(B.EMP_MOBLPHON, 1, 3) || '-' ||
			    SUBSTR(B.EMP_MOBLPHON, 4, 4) || '-' ||
			    SUBSTR(B.EMP_MOBLPHON, 8) AS EMP_MOBLPHON, <!-- 휴대전화 -->
		        B.EMP_ZIP, 
		        B.EMP_GENDER,
		        B.EMP_ROAD_NM_ADDR, 
		        B.EMP_DADDR, 
		        B.EMP_IMG_URL, 
		        B.EMP_YRYC_DAYCNT, 
		        B.EMP_HDOF_STAT, <!-- 재직상태 -->
		         B.EMP_JNCMP_YMD,<!-- 입사일자 -->
		         TO_CHAR(TO_DATE(  B.EMP_RSGNTN_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS EMP_RSGNTN_YMD,<!-- 퇴사일자 -->
		        B.EMP_ATRZ_SGN,
		        B.EMP_NM , <!-- 사원명 -->
		        A.DEPT_CD , <!-- 부서코드 -->
		        A.DEPT_NM , <!-- 부서명 -->
		        C.JBGD_CD, <!-- 직급명 -->
		        C.JBGD_NM, <!-- 직급명 -->
		        D.COM_DET_CD,
		        D.COM_DET_CD_CN 
		FROM DEPARTMENT A
		INNER JOIN EMPLOYEE B
			ON A.DEPT_CD=B.DEPT_CD
		INNER JOIN JOB_GRADE C
			ON B.JBGD_CD=C.JBGD_CD
        INNER JOIN MEMBER E
            ON B.MEM_ID = E.MEM_ID
       INNER JOIN COMMON_CODE_DETAIL D 
       		ON D.COM_DET_CD = B.EMP_HDOF_STAT
            WHERE 1=1
            <include refid="where"></include>
             )
		SELECT * FROM T
		WHERE T.RNUM BETWEEN (#{currentPage} * 15) - (15 -1) AND (#{currentPage} * 15)
	</select>
	
	
	<select id="getTotal" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
		FROM DEPARTMENT A
		INNER JOIN EMPLOYEE B
			ON A.DEPT_CD=B.DEPT_CD
		INNER JOIN JOB_GRADE C
			ON B.JBGD_CD=C.JBGD_CD
        INNER JOIN MEMBER E
            ON B.MEM_ID = E.MEM_ID
       INNER JOIN COMMON_CODE_DETAIL D 
       		ON D.COM_DET_CD = B.EMP_HDOF_STAT
            WHERE 1=1
		<include refid="where"></include>
		
	</select>
	
	<!-- 사원리스트 출력용  -->
	<select id="list2" parameterType="String" resultMap="empMap">
		SELECT  B.MEM_ID, 
		   		E.ENABLED, 
			    SUBSTR(B.EMP_RRNO, 1, 4) || '-' || 
			    SUBSTR(B.EMP_RRNO, 5, 2) || '-' || 
			    SUBSTR(B.EMP_RRNO, 7, 2) AS EMP_RRNO,
		        B.EMP_EML,
		        SUBSTR(B.EMP_MOBLPHON, 1, 3) || '-' ||
			    SUBSTR(B.EMP_MOBLPHON, 4, 4) || '-' ||
			    SUBSTR(B.EMP_MOBLPHON, 8) AS EMP_MOBLPHON, 
		        B.EMP_ZIP, 
		        B.EMP_GENDER,
		        B.EMP_ROAD_NM_ADDR, 
		        B.EMP_DADDR, 
		        B.EMP_IMG_URL, 
		        B.EMP_YRYC_DAYCNT, 
		        B.EMP_HDOF_STAT, 
		         TO_CHAR(TO_DATE( B.EMP_JNCMP_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS EMP_JNCMP_YMD,
		         TO_CHAR(TO_DATE(  B.EMP_RSGNTN_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS EMP_RSGNTN_YMD,
		        B.EMP_ATRZ_SGN,
		        B.EMP_NM , 
		        A.DEPT_NM , 
		        C.JBGD_NM 
		FROM DEPARTMENT A
		INNER JOIN EMPLOYEE B
			ON A.DEPT_CD=B.DEPT_CD
		INNER JOIN JOB_GRADE C
			ON B.JBGD_CD=C.JBGD_CD
        INNER JOIN MEMBER E
            ON B.MEM_ID = E.MEM_ID
	</select>
	
	<!-- 24.9.18 김인호 부서별 사원 쿼리 -->
	<select id="deptEmpListAjax" parameterType="String" resultMap="deptEmpMap">
		SELECT E.MEM_ID, E.EMP_NM, E.EMP_RRNO, E.EMP_EML, E.EMP_MOBLPHON
		     , E.EMP_ZIP, E.EMP_ROAD_NM_ADDR, E.EMP_DADDR, E.EMP_IMG_URL, E.EMP_YRYC_DAYCNT
		     , E.EMP_HDOF_STAT, E.EMP_JNCMP_YMD, E.EMP_RSGNTN_YMD, E.EMP_ATRZ_SGN
		     , E.JBGD_CD, E.DEPT_CD
		     , J.JBGD_NM
		     , D.DEPT_NM
		  FROM EMPLOYEE E INNER JOIN JOB_GRADE J ON E.JBGD_CD = J.JBGD_CD
		                  INNER JOIN DEPARTMENT D ON E.DEPT_CD = D.DEPT_CD
		 WHERE E.DEPT_CD = #{DEPT_CD}
	</select>
	
	<select id="authEmpList" parameterType="hashMap" resultMap="empMap">
		WITH T AS
		(
			SELECT 
			    E.MEM_ID,
			    E.EMP_NM,
			    LISTAGG(A.AUTH_NM, ', ') WITHIN GROUP (ORDER BY A.AUTH_NM) AS AUTH_NM,
			    J.JBGD_NM,
			    D.DEPT_NM,
			    ROW_NUMBER() OVER (ORDER BY E.MEM_ID DESC) AS RNUM
			FROM 
			    EMPLOYEE E
			JOIN 
			    MEMBER M ON E.MEM_ID = M.MEM_ID
			JOIN 
			    AUTH_LINK AL ON M.MEM_ID = AL.MEM_ID
			JOIN 
			    AUTH A ON AL.AUTH_CODE = A.AUTH_CODE
			JOIN 
			    JOB_GRADE J ON E.JBGD_CD = J.JBGD_CD
			JOIN 
			    DEPARTMENT D ON E.DEPT_CD = D.DEPT_CD
		    WHERE 1 = 1
			<if test="authCode != null and authCode != ''">
				AND A.AUTH_CODE LIKE '%' || #{authCode} || '%' 
			</if>
			<if test="deptCd != null and deptCd != ''">
				AND E.DEPT_CD = #{deptCd}
			</if>
		    GROUP BY E.MEM_ID, E.EMP_NM, J.JBGD_NM, D.DEPT_NM
		)
		SELECT * FROM T
		WHERE T.RNUM BETWEEN (#{currentPage} * 15) - (15 -1) AND (#{currentPage} * 15)
	</select>	
	<!-- 24.9.13.홍정호 사원 + 권한 select 쿼리문 끝-->
	
	<select id="getAuthEmpTotal" parameterType="hashMap" resultType="int">
		SELECT
            COUNT(LISTAGG(A.AUTH_NM, ', ') WITHIN GROUP (ORDER BY A.AUTH_NM))
		FROM
		    EMPLOYEE E
		JOIN
		    MEMBER M ON E.MEM_ID = M.MEM_ID
		JOIN
		    AUTH_LINK AL ON M.MEM_ID = AL.MEM_ID
		JOIN 
		    AUTH A ON AL.AUTH_CODE = A.AUTH_CODE
		JOIN 
		    JOB_GRADE J ON E.JBGD_CD = J.JBGD_CD
		JOIN 
		    DEPARTMENT D ON E.DEPT_CD = D.DEPT_CD
	    WHERE 1 = 1
		<if test="authCode != null and authCode != ''">
			AND A.AUTH_CODE LIKE '%' || #{authCode} || '%' 
		</if>
		<if test="deptCd != null and deptCd != ''">
			AND E.DEPT_CD = #{deptCd}
		</if>
	    GROUP BY E.MEM_ID, E.EMP_NM, J.JBGD_NM, D.DEPT_NM
	</select>
	
<!-- 24.09.18 임세희 사원 상세 -->
	<select id="detail" parameterType="String" resultType="employeeVO">
		SELECT 
 	        A.DEPT_CD ,
 	        A.DEPT_NM , 
 	        B.MEM_ID, 
 	        B.EMP_EML, 
 	        B.EMP_NM ,
 	        B.EMP_ATRZ_SGN,
 	        B.EMP_ZIP, 
 	        B.EMP_GENDER, 
 	        B.EMP_ROAD_NM_ADDR, 
 	        B.EMP_DADDR, 
 	        B.EMP_IMG_URL, 
 	        B.EMP_YRYC_DAYCNT, 
 	        B.EMP_HDOF_STAT, 
 	         TO_CHAR(TO_DATE(  B.EMP_JNCMP_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS EMP_JNCMP_YMD,
 	         TO_CHAR(TO_DATE(  B.EMP_RSGNTN_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS EMP_RSGNTN_YMD,
 	        SUBSTR(B.EMP_RRNO, 1, 4) || '-' || 
 	        SUBSTR(B.EMP_RRNO, 5, 2) || '-' || 
 	        SUBSTR(B.EMP_RRNO, 7, 2) AS EMP_RRNO,
 	        SUBSTR(B.EMP_MOBLPHON, 1, 3) || '-' ||
 	        SUBSTR(B.EMP_MOBLPHON, 4, 4) || '-' ||
 	        SUBSTR(B.EMP_MOBLPHON, 8) AS EMP_MOBLPHON,
 	        C.JBGD_CD, 
 	        C.JBGD_NM, 
 	        E.ENABLED,
 	        B.EMP_IMG_NM,
            AL.AUTH_CODE,
            AU.AUTH_NM
		 FROM DEPARTMENT A
		 	INNER JOIN EMPLOYEE B
		 	    ON A.DEPT_CD=B.DEPT_CD
		 	INNER JOIN JOB_GRADE C
		 	    ON B.JBGD_CD=C.JBGD_CD
		 	INNER JOIN MEMBER E
		 	    ON B.MEM_ID = E.MEM_ID
		 	INNER JOIN COMMON_CODE_DETAIL D
		 	   ON D.COM_DET_CD = B.EMP_HDOF_STAT
            INNER JOIN AUTH_LINK AL
                ON B.MEM_ID = AL.MEM_ID
            INNER JOIN AUTH AU
                ON AL.AUTH_CODE = AU.AUTH_CODE
	 WHERE B.MEM_ID= #{memId}
        
	</select>
	
	<!--24.09.20 임세희 회원 id중복검사 -->
	<select id="selectById" parameterType="String" resultType="employeeVO">
	SELECT MEM_ID
	FROM EMPLOYEE
	WHERE MEM_ID =#{memId}
	</select>

	<!-- 부서 목록 -->
	<select id="getDepts" resultType="deptVO">
		SELECT  DEPT_CD ,DEPT_NM
		FROM DEPARTMENT
		 WHERE DEPT_CD !='C5'
        AND DEPT_CD != 'C6'
        AND DEPT_CD != 'C7'
		 ORDER BY 1
	</select>
	
	<!-- 직급 목록 -->
	<select id="getJobGrades" resultType="JobGradeVO">
		SELECT  JBGD_CD, JBGD_NM
		FROM JOB_GRADE
		ORDER BY 1
	</select>
	
	<!-- 재직 상태 목록 -->
	<select id="getEmpStats" resultType="CommonCodeDetailVO">
		SELECT COM_DET_CD, COM_CD_GROUP, COM_DET_CD_NM, COM_DET_CD_CN
		FROM COMMON_CODE_DETAIL
		WHERE COM_CD_GROUP = 'T'
		ORDER BY 1
	</select>
	
	<!-- 
	memberVO.password : employeeVO의 중첩된 자바빈의 password 프로퍼티
	 -->
	   <insert id="registPost" parameterType="employeeVO">
			<!-- EmployeeController에서 employeeVO와 같은 객체 -->
		  <selectKey resultType="String" order="BEFORE" keyProperty="memId">
	       
	       SELECT SUBSTR(NVL(MAX(MEM_ID), 'emp' || TO_CHAR(SYSDATE, 'YY') || #{deptCd}  ||'000'), 1, 7) || 
				 TRIM(TO_CHAR(SUBSTR(NVL(MAX(MEM_ID), 'emp' || TO_CHAR(SYSDATE, 'YY') || #{deptCd}  || '000'), -3) + 1, '000'))
			FROM MEMBER 
			WHERE MEM_ID LIKE 'emp%' 
			  AND MEM_ID LIKE '___' || TO_CHAR(SYSDATE, 'YY') || '%' 
			  AND MEM_ID LIKE '_____' || #{deptCd}  || '%'
		       
		    </selectKey>
		
		    <![CDATA[
		DECLARE
		    v_new_mem_id VARCHAR2(20);
		    v_max_id VARCHAR2(20);
		    v_year VARCHAR2(2);
		    v_dept_code VARCHAR2(5) := UPPER(#{deptCd});
		    v_password VARCHAR2(1000) := #{memberVO.password}; 
		
		    v_emp_nm VARCHAR2(300) := #{empNm}; 
		    v_emp_rrno VARCHAR2(1000) := #{empRrno}; 
		    v_emp_eml VARCHAR2(320) := #{empEml}; 
		    v_emp_moblphon VARCHAR2(11) := #{empMoblphon}; 
		    v_emp_zip VARCHAR2(5) := #{empZip}; 
		    v_emp_road_nm_addr VARCHAR2(200) := #{empRoadNmAddr};
		    v_emp_daddr VARCHAR2(200) := #{empDaddr}; 
		    v_emp_img_url VARCHAR2(400) := #{empImgUrl}; 
		   
		   	
		    v_emp_yryc_daycnt NUMBER := 15;
		    v_emp_hdof_stat VARCHAR2(20) := 'T1'; 
		    v_emp_jncmp_ymd VARCHAR2(8) := #{empJncmpYmd};
		    v_emp_rsgntn_ymd VARCHAR2(8) := NULL ; 
		    v_emp_atrz_sgn VARCHAR2(400) := '/resources/images/approval.jpg'; 
		    v_jbgd_cd VARCHAR2(5) := #{jbgdCd}; 
		    v_emp_gender VARCHAR2(20) := #{empGender};
		    
		    v_auth_cd VARCHAR2(300) := #{authCd};
		    
		BEGIN
		   
		    v_year := TO_CHAR(SYSDATE, 'YY'); 
		    v_new_mem_id := 'emp' || v_year || v_dept_code;
		
		    SELECT MAX(MEM_ID)
		    INTO v_max_id
		    FROM MEMBER
		    WHERE MEM_ID LIKE v_new_mem_id || '%';
		   
		    IF v_max_id IS NOT NULL THEN
		       
		        IF LENGTH(v_max_id) >= 8 THEN
		            v_new_mem_id := v_new_mem_id || LPAD(NVL(TO_NUMBER(SUBSTR(v_max_id, 8)) + 1, 1), 3, '0');
		        ELSE
		           
		            v_new_mem_id := v_new_mem_id || '001';
		        END IF;
		    ELSE
		      
		        v_new_mem_id := v_new_mem_id || '001';
		    END IF;
		
		   
		    INSERT INTO MEMBER (MEM_ID, PASSWORD, ENABLED)
		    VALUES (#{memId}, v_password, '1');
		
		   
		    INSERT INTO EMPLOYEE (
		        MEM_ID, EMP_NM, EMP_RRNO, EMP_EML, EMP_MOBLPHON, EMP_ZIP, 
		        EMP_ROAD_NM_ADDR, EMP_DADDR, EMP_IMG_URL, EMP_YRYC_DAYCNT, 
		        EMP_HDOF_STAT, EMP_JNCMP_YMD, EMP_RSGNTN_YMD, EMP_ATRZ_SGN, 
		        JBGD_CD, DEPT_CD, EMP_GENDER
		    ) 
		    VALUES (
		        #{memId}, v_emp_nm, v_emp_rrno, v_emp_eml, v_emp_moblphon, v_emp_zip, 
		        v_emp_road_nm_addr, v_emp_daddr, v_emp_img_url, v_emp_yryc_daycnt, 
		        v_emp_hdof_stat, v_emp_jncmp_ymd, v_emp_rsgntn_ymd, v_emp_atrz_sgn, 
		        v_jbgd_cd, v_dept_code, v_emp_gender
		    );
		    
	        IF v_auth_cd NOT IN ('ROLE_AIR', 'ROLE_FRN', 'ROLE_SBCTR') THEN
	            INSERT INTO AUTH_LINK (
	                MEM_ID, AUTH_CODE
	            )
	            VALUES (
	                #{memId}, v_auth_cd
	            );
	
	            INSERT INTO AUTH_LINK (
	                MEM_ID, AUTH_CODE
	            )
	            VALUES (
	                #{memId}, 'ROLE_MEMBER'
	            );
	        ELSE
	            INSERT INTO AUTH_LINK (
	                MEM_ID, AUTH_CODE
	            )
	            VALUES (
	                #{memId}, v_auth_cd
	            );
	        END IF;
		    
		    COMMIT; 
		EXCEPTION
		    WHEN OTHERS THEN
		        ROLLBACK; 
		        RAISE;     
		END;
    ]]>
 	  </insert>
 	  
 	  	<!--  권한목록-->
	<select id="authList" resultType="authVO">
		SELECT AUTH_CODE, AUTH_NM
		FROM AUTH
		WHERE AUTH_CODE != 'ROLE_AIR'
		AND AUTH_CODE != 'ROLE_FRN'
		AND AUTH_CODE != 'ROLE_SBCTR'
		ORDER BY 1 
	</select>
 	  
	<select id="fileList" parameterType="long" resultType="FileDetailVO">
		SELECT FILE_SN, 
			   FILE_GROUP_NO, FILE_ORGNL_FILE_NM, FILE_STRG_FILE_NM,
			   FILE_FILE_PATH_NM, FILE_SZ, FILE_FILE_EXTN_NM, FILE_MIME,
			   FILE_FANCYSIZE, FILE_FILE_STRG_YMD, FILE_DWNLD_CNT
		FROM FILE_DETAIL
		WHERE FILE_GROUP_NO = #{fileGroupNo}
	</select>
	
	<!-- 이미지 업로드 -->
	<update id="updateImg" parameterType="EmployeeVO">
		UPDATE EMPLOYEE
		SET EMP_IMG_URL = #{empImgUrl},
		    EMP_IMG_NM = #{empImgNm}
		WHERE MEM_ID = #{memId}
	</update>

	<!-- 사원 수정 실행 -->
	<update id="editPost" parameterType="employeeVO">
	    UPDATE EMPLOYEE
	    SET 
	    	EMP_NM            = #{empNm}, <!-- 이름 -->
	    	EMP_EML           = #{empEml}, <!-- 이메일  -->
	    	EMP_ZIP           = #{empZip}, <!--  우편번호-->
	    	EMP_ROAD_NM_ADDR  = #{empRoadNmAddr}, <!-- 주소 -->
	    	EMP_DADDR         = #{empDaddr}, <!-- 상세주소 -->
	    	<if test="empImgUrl!=null and empImgUrl!=''">
	    		EMP_IMG_URL       = #{empImgUrl}, <!-- 이미지경로 -->
	    	</if>
	    	EMP_YRYC_DAYCNT   = #{empYrycDaycnt}, <!--  연차일수 -->
	    	EMP_HDOF_STAT     = #{empHdofStat},<!-- 재직상태 -->
	    	JBGD_CD           = #{jbgdCd}, <!-- 직급코드 -->
	    	DEPT_CD           = #{deptCd}, <!-- 부서코드 -->
	    	EMP_GENDER        = #{empGender}, <!-- 성별 -->
	    	
	        EMP_RRNO          = #{empRrno},                <!-- 생년월일 -->
	        EMP_MOBLPHON      = #{empMoblphon},         <!-- 휴대폰번호 -->
	        EMP_JNCMP_YMD     = #{empJncmpYmd},        <!-- 입사일자 -->
	        EMP_RSGNTN_YMD    = #{empRsgntnYmd}    <!-- 퇴사일자 (NULL일 경우) -->
	    WHERE 
	        MEM_ID            = #{memId}                      <!-- 직원아이디 -->
	</update>
	
	<update id="editAuthPost" parameterType="employeeVO">
		UPDATE AUTH_LINK
		SET
			AUTH_CODE = #{authCode}
		WHERE
			MEM_ID = #{memId}
		AND
			AUTH_CODE != 'ROLE_MEMBER'
	</update>
	
	<!-- 
		화상회의를 위한 부서, 사원 목록 조회
	 -->
	 <select id="getEmpListForVideo" resultType="employeeVO">
	 	SELECT E.MEM_ID
		      , E.EMP_NM
		      , E.EMP_RRNO
		      , E.EMP_EML
		      , E.EMP_MOBLPHON
		      , E.EMP_ZIP
		      , E.EMP_ROAD_NM_ADDR
		      , E.EMP_DADDR
		      , E.EMP_IMG_URL
		      , E.EMP_YRYC_DAYCNT
		      , E.EMP_HDOF_STAT
		      , E.EMP_JNCMP_YMD
		      , E.EMP_RSGNTN_YMD
		      , E.EMP_ATRZ_SGN
		      , E.JBGD_CD
		      , E.DEPT_CD
		      , E.EMP_GENDER
		      , E.EMP_IMG_NM
		      , J.JBGD_NM
	 	  FROM EMPLOYEE E
          INNER JOIN JOB_GRADE J ON(J.JBGD_CD = E.JBGD_CD)
          WHERE E.DEPT_CD = #{deptCd}
          ORDER BY E.JBGD_CD
	 </select>
	 
	 <select id="getEmpListForChat" resultMap="memberMap">
		SELECT
			MEM.MEM_ID,
		    -- Employee 정보
		    EMP.EMP_NM, JBGD.JBGD_CD, JBGD.JBGD_NM,
		    -- Department 정보
		    DEPT.DEPT_CD, DEPT.DEPT_NM,
		    -- BP 정보
		    BP.BP_NM, BP.BP_RPRSV_NM
		FROM MEMBER MEM
		JOIN AUTH_LINK AU ON MEM.MEM_ID = AU.MEM_ID
		LEFT JOIN EMPLOYEE EMP ON MEM.MEM_ID = EMP.MEM_ID
		LEFT JOIN JOB_GRADE JBGD ON EMP.JBGD_CD = JBGD.JBGD_CD
		LEFT JOIN BP BP ON MEM.MEM_ID = BP.MEM_ID
		LEFT JOIN DEPARTMENT DEPT ON DEPT.DEPT_CD = EMP.DEPT_CD OR DEPT.DEPT_CD = BP.DEPT_CD
		WHERE MEM.ENABLED = '1'
		AND DEPT.DEPT_CD = #{deptCd}
	 </select>
	 
	 
	 <select id="memList" parameterType="String" resultType="memberVO">
		 SELECT MEM_ID, PASSWORD, ENABLED
		 FROM MEMBER
		 WHERE MEM_ID =#{memId}
	 </select>
	 
	 <update id="updatePass" parameterType="employeeVO">
	  UPDATE MEMBER
		SET PASSWORD = #{password}
		WHERE MEM_ID =#{memId} 
	 </update>
	 
	 <update id="updateEnabled" parameterType="String">
	 UPDATE MEMBER
		SET ENABLED = 0
		WHERE MEM_ID = #{memId} 
	 </update>
	 
	<resultMap type="employeeVO" id="deptEmpMap">
		<result property="memId" column="MEM_ID"/>
		<result property="empNm" column="EMP_NM"/>
		<result property="empRrno" column="EMP_RRNO"/>
		<result property="empEml" column="EMP_EML"/>
		<result property="empMoblphon" column="EMP_MOBLPHON"/>
		<result property="empZip" column="EMP_ZIP"/>
		<result property="empRoadNmAddr" column="EMP_ROAD_NM_ADDR"/>
		<result property="empDaddr" column="EMP_DADDR"/>
		<result property="empImgUrl" column="EMP_IMG_URL"/>
		<result property="empYrycDaycnt" column="EMP_YRYC_DAYCNT"/>
		<result property="empHdofStat" column="EMP_HDOF_STAT"/>
		<result property="empJncmpYmd" column="EMP_JNCMP_YMD"/>
		<result property="empRsgntnYmd" column="EMP_RSGNTN_YMD"/>
		<result property="empAtrzSgn" column="EMP_ATRZ_SGN"/>
		<result property="jbgdCd" column="JBGD_CD"/>
		<result property="deptCd" column="DEPT_CD"/>
		<association property="jobGrade" resultMap="jobGradeMap"></association>
		<association property="department" resultMap="departmentMap"></association>
	</resultMap>
	
	<!-- 24.9.13.홍정호 사원 + 권한 select 쿼리문-->
	<!-- 24.10.9. 홍정호 resultMap 정리 -->
	<resultMap type="memberVO" id="memberMap">
		<result property="memId" column="MEM_ID"/>
		<result property="password" column="PASSWORD"/>
		<result property="enabled" column="ENABLED"/>
		<association property="employeeVO" resultMap="employeeMap"></association>
		<association property="bpVO" resultMap="bpMap"></association>
		<association property="jobGradeVO" resultMap="jobGradeMap"></association>
		<association property="deptVO" resultMap="departmentMap"></association>
		<collection property="authLinkVOList" resultMap="authLinkMap"></collection>
	</resultMap>	
	<!-- 홍정호 empMap -->
	<resultMap type="employeeVO" id="employeeMap">
		<result property="memId" column="MEM_ID"/>
		<result property="empNm" column="EMP_NM"/>
		<result property="empRrno" column="EMP_RRNO"/>
		<result property="empEml" column="EMP_EML"/>
		<result property="empMoblphon" column="EMP_MOBLPHON"/>
		<result property="empZip" column="EMP_ZIP"/>
		<result property="empRoadNmAddr" column="EMP_ROAD_NM_ADDR"/>
		<result property="empDaddr" column="EMP_DADDR"/>
		<result property="empImgUrl" column="EMP_IMG_URL"/>
		<result property="empImgNm" column="EMP_IMG_NM"/>
		<result property="empYrycDaycnt" column="EMP_YRYC_DAYCNT"/>
		<result property="empHdofStat" column="EMP_HDOF_STAT"/>
		<result property="empJncmpYmd" column="EMP_JNCMP_YMD"/>
		<result property="empRsgntnYmd" column="EMP_RSGNTN_YMD"/>
		<result property="empAtrzSgn" column="EMP_ATRZ_SGN"/>
		<result property="jbgdCd" column="JBGD_CD"/>
		<result property="deptCd" column="DEPT_CD"/>
	</resultMap>
	
	<!-- 임세희 empMap -->	
	<resultMap type="employeeVO" id="empMap">
		<result property="empImgNm" column="EMP_IMG_NM"/>
		<result property="memId" column="MEM_ID"/>
		<result property="empNm" column="EMP_NM"/>
		<result property="empRrno" column="EMP_RRNO"/>
		<result property="empEml" column="EMP_EML"/>
		<result property="empMoblphon" column="EMP_MOBLPHON"/>
		<result property="empZip" column="EMP_ZIP"/>
		<result property="empRoadNmAddr" column="EMP_ROAD_NM_ADDR"/>
		<result property="empDaddr" column="EMP_DADDR"/>
		<result property="empImgUrl" column="EMP_IMG_URL"/>
		<result property="empYrycDaycnt" column="EMP_YRYC_DAYCNT"/>
		<result property="empHdofStat" column="EMP_HDOF_STAT"/>
		<result property="empJncmpYmd" column="EMP_JNCMP_YMD"/>
		<result property="empRsgntnYmd" column="EMP_RSGNTN_YMD"/>
		<result property="empAtrzSgn" column="EMP_ATRZ_SGN"/>
		<result property="jbgdCd" column="JBGD_CD"/>
		<result property="deptCd" column="DEPT_CD"/>
		<result property="empGender" column="EMP_GENDER"/>
		<result property="rnum" column="RNUM"/>
		<association property="jobGrade" resultMap="jobGradeMap"/>
		<association property="department" resultMap="departmentMap"/>
		<association property="memberVO" resultMap="memberMap"/>
		<association property="auth" resultMap="authMap"/>
		<association property="fileDetailVO" resultMap="fileDetailMap"/>
		<association property="commonCodeDetailVO" resultMap="commonCodeDetailMap"/>
	</resultMap>
	
	<resultMap type="bpVO" id="bpMap">
		<result property="memId" column="MEM_ID"/>
		<result property="bpNm" column="BP_NM"/>
		<result property="bpRprsvNm" column="BP_RPRSV_NM"/>
		<result property="bpTelno" column="BP_TELNO"/>
		<result property="bpBrno" column="BP_BRNO"/>
		<result property="ctrtYmd" column="CTRT_YMD"/>
		<result property="ctrtEndYmd" column="CTRT_END_YMD"/>
	</resultMap>
	
	<resultMap type="authVO" id="authMap">
		<result property="authNm" column="AUTH_NM"/>
		<result property="authCode" column="AUTH_CODE"/>
	</resultMap>
	
	<resultMap type="jobGradeVO" id="jobGradeMap">
		<result property="jbgdNm" column="JBGD_NM"/>
		<result property="jbgdCd" column="JBGD_CD"/>
	</resultMap>
	
	<resultMap type="deptVO" id="departmentMap">
		<result property="deptCd" column="DEPT_CD"/>
		<result property="deptNm" column="DEPT_NM"/>
	</resultMap>
	
	<resultMap type="commonCodeDetailVO" id="commonCodeDetailMap">
		<result property="comDetCd" column="COM_DET_CD"/>
		<result property="comCdGroup" column="COM_CD_GROUP"/>
		<result property="comDetCdNm" column="COM_DET_CD_NM"/>
		<result property="comDetCdCn" column="COM_DET_CD_CN"/>
	</resultMap>
	
	<resultMap type="fileDetailVO" id="fileDetailMap">
		<result property="fileSn" column="FILE_SN"/>
		<result property="fileGroupNo" column="FILE_GROUP_NO"/>
		<result property="fileOrgnlFileNm" column="FILE_ORGNL_FILE_NM"/>
		<result property="fileStrgFileNm" column="FILE_STRG_FILE_NM"/>
		<result property="fileFilePathNm" column="FILE_FILE_PATH_NM"/>
		<result property="fileSz" column="FILE_SZ"/>
		<result property="fileFileExtnNm" column="FILE_FILE_EXTN_NM"/>
		<result property="fileMime" column="FILE_MIME"/>
		<result property="fileFancysize" column="FILE_FANCYSIZE"/>
		<result property="fileFileStrgYmd" column="FILE_FILE_STRG_YMD"/>
		<result property="fileDwnldCnt" column="FILE_DWNLD_CNT"/>
	</resultMap>
	
	<resultMap type="authLinkVO" id="authLinkMap">
		<result property="memId" column="MEM_ID"/>
		<result property="authCode" column="AUTH_CODE"/>
	</resultMap>		
</mapper>